@import "helpers/functions"

//===================================================================
// Main Transitioner sass file. Organizes transitions by added class
//===================================================================

// changes "#main .fa" to "main-subclass-fa-transition", for instance
// b/c sass can't extend nested selectors
@function to-placeholder-name($value){
  @return str-replace(
            str-replace(
              rm-sp($value, '-'), '.', 'subclass-'), '#', 'subid-')
          + "-transition";
}

// drops a placeholder for given element and transition
@mixin placeholder-transition($name, $transition) {
  %#{$name} { transition: #{$transition}; }
}

@mixin transitioner($selector, $transition, $root: false, $properties-root: false) {
  $transition: to-string($transition);
  $selector: to-string($selector);
  @at-root {
    $placeholder: to-placeholder-name($selector);
    $s-for-transition: $selector;
    $s-for-properties: $selector + &;
    @if str-index($transition, extend) {
      $placeholder: to-placeholder-name(str-slice($transition, 8));
    } @else {
      @include placeholder-transition($placeholder, $transition);
    }
    @if $root {
      $s-for-transition: $root $selector;
    }
    @if $properties-root {
      $s-for-properties: $properties-root $selector + &;
    }
    #{$s-for-transition} { @extend %#{$placeholder}; }
    #{$s-for-properties} { @content; }
  }
}

@mixin from($root: ""){
  @at-root{
    $x: str-replace(to-string(&), $properties-root, "");
    $added-class: "." + get-last(str-explode($x, "."));
    #{$root str-remove($x, $added-class)}{
      @content;
    }
  }
}

@mixin to(){
  @at-root{
    #{&}{ @content; }
  }
}
